{"version":3,"file":"state.spec.js","sourceRoot":"","sources":["../ts/state.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { createState } from './state'\n\ntest('returns initial value', () => {\n  const [value] = createState([1, 2, 3])\n\n  expect(value).toEqual([1, 2, 3])\n})\n\ntest('init value is freezed', () => {\n  const init = [1, 2, 3]\n  createState(init)\n  expect(() => init[3] = 4).toThrow()\n})\n\ntest('value is freezed', () => {\n  const [value] = createState([1, 2, 3])\n  expect(() => value[3] = 4).toThrow()\n})\n\ntest('setValue triggers onChange with new and prev value', () => {\n  const [, setValue, onChange] = createState([1, 2, 3])\n\n  let newValue: number[]\n  let oldValue: number[]\n  onChange((value, prev) => (newValue = value, oldValue = prev))\n  setValue([1, 2, 4])\n\n  expect(newValue!).toEqual([1, 2, 4])\n  expect(oldValue!).toEqual([1, 2, 3])\n})\n\ntest('setValue will not trigger onChange if the value does not change', () => {\n  const [value, setValue, onChange] = createState([1, 2, 3])\n\n  onChange(() => { throw 'should not trigger' })\n  setValue(value)\n})\n\ntest('reset() to the original value', () => {\n  const [, set, on, reset] = createState(1)\n\n  let a: number\n  on(v => a = v)\n  set(3)\n  reset()\n  expect(a!).toBe(1)\n})\n\ntest('onChange() will register handler only once', () => {\n  const [, set, on] = createState(1)\n  let count = 0\n  const handler = () => count++\n  on(handler)\n  on(handler)\n  set(2)\n\n  expect(count).toBe(1)\n})\n"]}